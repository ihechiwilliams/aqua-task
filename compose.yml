services:
  app-seed:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres:5432/aqua_task?sslmode=disable"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      SERVER_PORT: ${SERVER_PORT:-8080}
    command: ["/usr/local/bin/wait-for-rabbitmq.sh","main", "seed"] # Run the seed command

  app-start:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - .env
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres:5432/aqua_task?sslmode=disable"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      SERVER_PORT: ${SERVER_PORT:-8080}
    command: ["/usr/local/bin/wait-for-rabbitmq.sh","main", "start"] # Run the start command

  notification:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "notification" ]
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres:5432/aqua_task?sslmode=disable"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      NOTIFICATION_SERVER_PORT: ${NOTIFICATION_SERVER_PORT:-9090}
      NOTIFICATION_GRPC_SERVER_PORT: ${NOTIFICATION_GRPC_SERVER_PORT:-50051}
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "${NOTIFICATION_SERVER_PORT:-9090}:${NOTIFICATION_SERVER_PORT:-9090}"
      - "${NOTIFICATION_GRPC_SERVER_PORT:-50051}:${NOTIFICATION_GRPC_SERVER_PORT:-50051}"

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: aqua_task
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_ERLANG_COOKIE: "secretcookie"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
